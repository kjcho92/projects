{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"default_resource_location": {
			"defaultValue": "$resourceLocation",
			"type": "string"
		},
		"resource_location_microsoft_insights": {
			"defaultValue": "$resourceLocationForMicrosoftInsights",
			"type": "string"
		},		
		"resource_location_microsoft_servicefabric": {
			"defaultValue": "$resourceLocationForServiceFabric",
			"type": "string"
		},		
		"sites_nova$name_name": {
			"defaultValue": "$WebsiteName",
			"type": "String"
		},
		"vaults_NovaSparkKV$name_name": {
			"defaultValue": "NovaSparkKV$name",
			"type": "String"
		},
		"vaults_NovaServicesKV$name_name": {
			"defaultValue": "NovaServicesKV$name",
			"type": "String"
		},
		"vaults_NovaSparkRDPKV$name_name": {
			"defaultValue": "NovaSparkRDPKV$name",
			"type": "String"
		},
		"vaults_NovaFabricRDPKV$name_name": {
			"defaultValue": "NovaFabricRDPKV$name",
			"type": "String"
		},
        "sourceVaultValue": {
            "defaultValue": "novasfKV$name",
            "type": "string"
        },
		"Redis_nova$name_name": {
			"defaultValue": "nova$name",
			"type": "String"
		},
		"components_nova$name_name": {
			"defaultValue": "nova$name",
			"type": "String"
		},
		"config_web_name": {
			"defaultValue": "web",
			"type": "String"
		},
		"components_novaweb$name_name": {
			"defaultValue": "novaweb$name",
			"type": "String"
		},
		"serverfarms_nova_app_service_plan_name": {
			"defaultValue": "nova-app-service-plan$name",
			"type": "String"
		},
		"databaseAccounts_nova$name_name": {
			"defaultValue": "nova$name",
			"type": "String"
		},
		"storageAccounts_novaconfigs$name_name": {
			"defaultValue": "novaconfigs$name",
			"type": "String"
		},
		"namespaces_novametricseventhub$name_name": {
			"defaultValue": "novametricseventhub$name",
			"type": "String"
		},
		"hostNameBindings_nova$name.azurewebsites.net_name": {
			"defaultValue": "nova$name.azurewebsites.net",
			"type": "String"
		},
		"eventhubs_novametricseventhub_name": {
			"defaultValue": "novametricseventhub",
			"type": "String"
		},
		"eventhubs_novametricseventhubdefault_name": {
			"defaultValue": "novametricseventhubdefault",
			"type": "String"
		},
		"AuthorizationRules_RootManageSharedAccessKey_name": {
			"defaultValue": "RootManageSharedAccessKey",
			"type": "String"
		},
		"consumergroups_$Default_name": {
			"defaultValue": "$Default",
			"type": "String"
		},
		"consumergroups_metrics-ingestor_name": {
			"defaultValue": "metrics-ingestor",
			"type": "String"
		},
		"authorizationRules_manage_name": {
			"defaultValue": "manage",
			"type": "String"
		},
		"sparkClusterName": {
			"defaultValue": "nova$name",
			"type": "string",
			"metadata": {
				"description": "The name of the HDInsight cluster to create."
			}
		},
		"sparkClusterLoginUserName": {
			"type": "string",
			"defaultValue": "admin",
			"metadata": {
				"description": "These credentials can be used to submit jobs to the cluster and to log into cluster dashboards."
			}
		},
		"sparkClusterLoginPassword": {
			"type": "securestring",
			"defaultValue": "$novaSparkPassword",
			"metadata": {
				"description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
			}
		},
		"sparkClusterVersion": {
			"type": "string",
			"defaultValue": "3.6",
			"metadata": {
				"description": "HDInsight cluster version."
			}
		},
		"sparkClusterWorkerNodeCount": {
			"type": "int",
			"defaultValue": 3,
			"metadata": {
				"description": "The number of nodes in the HDInsight cluster."
			}
		},
		"sparkClusterKind": {
			"type": "string",
			"defaultValue": "SPARK",
			"metadata": {
				"description": "The type of the HDInsight cluster to create."
			}
		},
		"sparkSshUserName": {
			"type": "string",
			"defaultValue": "sshuser",
			"metadata": {
				"description": "These credentials can be used to remotely access the cluster."
			}
		},
		"sparkSshPassword": {
			"type": "securestring",
			"defaultValue": "$novaSparkPassword",
			"metadata": {
				"description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
			}
		},
		"sparkManagedIdentity": {
			"type": "string",
			"defaultValue": "SparkManagedIdentity$name"
		}
	},
	"variables": {
		"storageAccounts_novaops_containerName_novaflow": "novaflow",
		"storageAccounts_novaops_containerName_centralprocessing": "centralprocessing",
		"storageAccounts_novaops_containerName_rules": "rules",
		"storageAccounts_novaops_containerName_referencedata": "referencedata",
		"storageAccounts_novaops_containerName_deployment": "deployment",
		"storageAccounts_novaops_containerName_specialprocessing": "specialprocessing",
		"storageAccounts_novaops_containerName_checkpoints": "checkpoints",
		"storageAccounts_novaops_containerName_diagnostics": "diagnostics",
		"storageAccounts_novaops_containerName_samples": "samples",
		"tenantId": "$tenantId",
		"userId": "$userId"
	},
	"resources": [
		{
			"comments": "Generalized from resource: '/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.Cache/Redis/nova$name'.",
			"type": "Microsoft.Cache/Redis",
			"name": "[parameters('Redis_nova$name_name')]",
			"apiVersion": "2017-10-01",
			"location": "[parameters('default_resource_location')]",
			"tags": {},
			"scale": null,
			"properties": {
				"sku": {
					"name": "Premium",
					"family": "P",
					"capacity": 3
				},
				"enableNonSslPort": false,
				"redisConfiguration": {
					"maxclients": "30000",
					"maxmemory-reserved": "1000",
					"maxfragmentationmemory-reserved": "1300",
					"maxmemory-delta": "1000"
				}
			},
			"dependsOn": []
		},
		{
			"comments": "Generalized from resource: '/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.DocumentDB/databaseAccounts/nova$name'.",
			"type": "Microsoft.DocumentDB/databaseAccounts",
			"kind": "MongoDB",
			"name": "[parameters('databaseAccounts_nova$name_name')]",
			"apiVersion": "2015-04-08",
			"location": "[parameters('default_resource_location')]",
			"tags": {
				"defaultExperience": "MongoDB"
			},
			"scale": null,
			"properties": {
				"ipRangeFilter": "",
				"enableAutomaticFailover": false,
				"enableMultipleWriteLocations": true,
				"isVirtualNetworkFilterEnabled": false,
				"virtualNetworkRules": [],
				"databaseAccountOfferType": "Standard",
				"consistencyPolicy": {
					"defaultConsistencyLevel": "Session",
					"maxIntervalInSeconds": 5,
					"maxStalenessPrefix": 100
				},
				"capabilities": [],
				"locations": [
					{
						"locationName": "[parameters('default_resource_location')]",
						"failoverPriority": 0
					}
				]
			},
			"dependsOn": []
		},
		{
			"comments": "Generalized from resource: '/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.EventHub/namespaces/novametricseventhub'.",
			"type": "Microsoft.EventHub/namespaces",
			"sku": {
				"name": "Standard",
				"tier": "Standard",
				"capacity": 1
			},
			"name": "[parameters('namespaces_novametricseventhub$name_name')]",
			"apiVersion": "2017-04-01",
			"location": "[parameters('default_resource_location')]",
			"tags": {},
			"scale": null,
			"properties": {
				"isAutoInflateEnabled": true,
				"maximumThroughputUnits": 1
			},
			"dependsOn": []
		},
		{
			"comments": "Generalized from resource: '/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/microsoft.insights/components/novaweb$name'.",
			"type": "microsoft.insights/components",
			"kind": "web",
			"name": "[parameters('components_novaweb$name_name')]",
			"apiVersion": "2015-05-01",
			"location": "[parameters('resource_location_microsoft_insights')]",
			"tags": {
				"applicationType": "web",
				"hidden-link:/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.Web/sites/nova$name": "Resource"
			},
			"scale": null,
			"properties": {
				"Application_Type": "web",
				"Flow_Type": "Redfield",
				"Request_Source": "AppServiceEnablementCreate",
				"HockeyAppId": null,
				"SamplingPercentage": null
			},
			"dependsOn": []
		},
		{
			"comments": "Generalized from resource: '/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/microsoft.insights/components/nova$name'.",
			"type": "microsoft.insights/components",
			"kind": "other",
			"name": "[parameters('components_nova$name_name')]",
			"apiVersion": "2015-05-01",
			"location": "[parameters('resource_location_microsoft_insights')]",
			"tags": {},
			"scale": null,
			"properties": {
				"Application_Type": "other",
				"Flow_Type": "Redfield",
				"Request_Source": "IbizaAIExtension",
				"HockeyAppId": null,
				"SamplingPercentage": null
			},
			"dependsOn": []
		},
		{
			"comments": "Generalized from resource: '/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.KeyVault/vaults/NovaFabricRDPKV$name'.",
			"type": "Microsoft.KeyVault/vaults",
			"name": "[parameters('vaults_NovaFabricRDPKV$name_name')]",
			"apiVersion": "2016-10-01",
			"location": "[parameters('default_resource_location')]",
			"tags": {},
			"scale": null,
			"properties": {
				"sku": {
					"family": "A",
					"name": "Standard"
				},
				"tenantId": "[variables('tenantId')]",
				"accessPolicies": [
					{
						"tenantId": "[variables('tenantId')]",
                        "objectId": "[variables('userId')]",
                        "permissions": {
                            "keys": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "secrets": [
                                "Get",
                                "List",
                                "Set",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "certificates": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "ManageContacts",
                                "ManageIssuers",
                                "GetIssuers",
                                "ListIssuers",
                                "SetIssuers",
                                "DeleteIssuers"
                            ]
                        }
                    }
				],
				"enabledForDeployment": false,
				"enabledForDiskEncryption": false,
				"enabledForTemplateDeployment": false
			},
			"dependsOn": []
		},
		{
			"comments": "Generalized from resource: '/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.KeyVault/vaults/NovaServicesKV$name'.",
			"type": "Microsoft.KeyVault/vaults",
			"name": "[parameters('vaults_NovaServicesKV$name_name')]",
			"apiVersion": "2016-10-01",
			"location": "[parameters('default_resource_location')]",
			"tags": {},
			"scale": null,
			"properties": {
				"sku": {
					"family": "A",
					"name": "Standard"
				},
				"tenantId": "[variables('tenantId')]",
				"accessPolicies": [
					{
						"tenantId": "[variables('tenantId')]",
                        "objectId": "[variables('userId')]",
                        "permissions": {
                            "keys": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "secrets": [
                                "Get",
                                "List",
                                "Set",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "certificates": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "ManageContacts",
                                "ManageIssuers",
                                "GetIssuers",
                                "ListIssuers",
                                "SetIssuers",
                                "DeleteIssuers"
                            ]
                        }
                    }
				],
				"enabledForDeployment": false,
				"enabledForDiskEncryption": false,
				"enabledForTemplateDeployment": false
			},
			"dependsOn": []
		},
		{
			"comments": "Generalized from resource: '/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.KeyVault/vaults/NovaSparkKV$name'.",
			"type": "Microsoft.KeyVault/vaults",
			"name": "[parameters('vaults_NovaSparkKV$name_name')]",
			"apiVersion": "2016-10-01",
			"location": "[parameters('default_resource_location')]",
			"tags": {},
			"scale": null,
			"properties": {
				"sku": {
					"family": "A",
					"name": "Standard"
				},
				"tenantId": "[variables('tenantId')]",
				"accessPolicies": [
					{
						"tenantId": "[variables('tenantId')]",
                        "objectId": "[variables('userId')]",
                        "permissions": {
                            "keys": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "secrets": [
                                "Get",
                                "List",
                                "Set",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "certificates": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "ManageContacts",
                                "ManageIssuers",
                                "GetIssuers",
                                "ListIssuers",
                                "SetIssuers",
                                "DeleteIssuers"
                            ]
                        }
                    }
				],
				"enabledForDeployment": false,
				"enabledForDiskEncryption": false,
				"enabledForTemplateDeployment": false
			},
			"dependsOn": []
		},
		{
			"comments": "Generalized from resource: '/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.KeyVault/vaults/NovaSparkRDPKV$name'.",
			"type": "Microsoft.KeyVault/vaults",
			"name": "[parameters('vaults_NovaSparkRDPKV$name_name')]",
			"apiVersion": "2016-10-01",
			"location": "[parameters('default_resource_location')]",
			"tags": {},
			"scale": null,
			"properties": {
				"sku": {
					"family": "A",
					"name": "Standard"
				},
				"tenantId": "[variables('tenantId')]",
				"accessPolicies": [
					{
						"tenantId": "[variables('tenantId')]",
                        "objectId": "[variables('userId')]",
                        "permissions": {
                            "keys": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "secrets": [
                                "Get",
                                "List",
                                "Set",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "certificates": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "ManageContacts",
                                "ManageIssuers",
                                "GetIssuers",
                                "ListIssuers",
                                "SetIssuers",
                                "DeleteIssuers"
                            ]
                        }
                    }
				],
				"enabledForDeployment": false,
				"enabledForDiskEncryption": false,
				"enabledForTemplateDeployment": false
			},
			"dependsOn": []
		},
		{
            "type": "Microsoft.KeyVault/vaults",
            "name": "[parameters('sourceVaultValue')]",
            "apiVersion": "2016-10-01",
			"location": "[parameters('resource_location_microsoft_servicefabric')]",
            "tags": {},
            "scale": null,
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
				"tenantId": "[variables('tenantId')]",
                "accessPolicies": [
                    {
						"tenantId": "[variables('tenantId')]",
                        "objectId": "[variables('userId')]",
                        "permissions": {
                            "keys": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "secrets": [
                                "Get",
                                "List",
                                "Set",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "certificates": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "ManageContacts",
                                "ManageIssuers",
                                "GetIssuers",
                                "ListIssuers",
                                "SetIssuers",
                                "DeleteIssuers"
                            ]
                        }
                    }
                ],
                "enabledForDeployment": true,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": true
            },
            "dependsOn": []
        },
		{
			"comments": "Generalized from resource: '/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.Storage/storageAccounts/novaconfigs$name'.",
			"type": "Microsoft.Storage/storageAccounts",
			"sku": {
				"name": "Standard_LRS",
				"tier": "Standard"
			},
			"kind": "BlobStorage",
			"name": "[parameters('storageAccounts_novaconfigs$name_name')]",
			"apiVersion": "2018-07-01",
			"location": "[parameters('default_resource_location')]",
			"tags": {},
			"scale": null,
			"properties": {
				"networkAcls": {
					"bypass": "AzureServices",
					"virtualNetworkRules": [],
					"ipRules": [],
					"defaultAction": "Allow"
				},
				"supportsHttpsTrafficOnly": true,
				"encryption": {
					"services": {
						"file": {
							"enabled": true
						},
						"blob": {
							"enabled": true
						}
					},
					"keySource": "Microsoft.Storage"
				},
				"accessTier": "Hot"
			},
			"dependsOn": [],
			"resources": [
				{
					"name": "[concat('default/', variables('storageAccounts_novaops_containerName_novaflow'))]",
					"type": "blobServices/containers",
					"apiVersion": "2018-03-01-preview",
					"dependsOn": [
						"[parameters('storageAccounts_novaconfigs$name_name')]"
					]
				},
				{
					"name": "[concat('default/', variables('storageAccounts_novaops_containerName_centralprocessing'))]",
					"type": "blobServices/containers",
					"apiVersion": "2018-03-01-preview",
					"dependsOn": [
						"[parameters('storageAccounts_novaconfigs$name_name')]"
					]
				},
				{
					"name": "[concat('default/', variables('storageAccounts_novaops_containerName_rules'))]",
					"type": "blobServices/containers",
					"apiVersion": "2018-03-01-preview",
					"dependsOn": [
						"[parameters('storageAccounts_novaconfigs$name_name')]"
					]
				},
				{
					"name": "[concat('default/', variables('storageAccounts_novaops_containerName_referencedata'))]",
					"type": "blobServices/containers",
					"apiVersion": "2018-03-01-preview",
					"dependsOn": [
						"[parameters('storageAccounts_novaconfigs$name_name')]"
					]
				},
				{
					"name": "[concat('default/', variables('storageAccounts_novaops_containerName_deployment'))]",
					"type": "blobServices/containers",
					"apiVersion": "2018-03-01-preview",
					"dependsOn": [
						"[parameters('storageAccounts_novaconfigs$name_name')]"
					]
				},
				{
					"name": "[concat('default/', variables('storageAccounts_novaops_containerName_specialprocessing'))]",
					"type": "blobServices/containers",
					"apiVersion": "2018-03-01-preview",
					"dependsOn": [
						"[parameters('storageAccounts_novaconfigs$name_name')]"
					]
				},
				{
					"name": "[concat('default/', variables('storageAccounts_novaops_containerName_diagnostics'))]",
					"type": "blobServices/containers",
					"apiVersion": "2018-03-01-preview",
					"dependsOn": [
						"[parameters('storageAccounts_novaconfigs$name_name')]"
					]
				},
				{
					"name": "[concat('default/', variables('storageAccounts_novaops_containerName_samples'))]",
					"type": "blobServices/containers",
					"apiVersion": "2018-03-01-preview",
					"dependsOn": [
						"[parameters('storageAccounts_novaconfigs$name_name')]"
					]
				}
			]
		},
		{
			"comments": "Generalized from resource: '/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.Web/serverfarms/nova-app-service-plan$name'.",
			"type": "Microsoft.Web/serverfarms",
			"sku": {
				"name": "S1",
				"tier": "Standard",
				"size": "S1",
				"family": "S",
				"capacity": 1
			},
			"kind": "app",
			"name": "[parameters('serverfarms_nova_app_service_plan_name')]",
			"apiVersion": "2016-09-01",
			"location": "[parameters('default_resource_location')]",
			"scale": null,
			"properties": {
				"name": "[parameters('serverfarms_nova_app_service_plan_name')]",
				"workerTierName": null,
				"adminSiteName": null,
				"hostingEnvironmentProfile": null,
				"perSiteScaling": false,
				"reserved": false,
				"targetWorkerCount": 0,
				"targetWorkerSizeId": 0
			},
			"dependsOn": []
		},
		{
			"comments": "Generalized from resource: '/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.Web/sites/nova$name'.",
			"type": "Microsoft.Web/sites",
			"kind": "app",
			"name": "[parameters('sites_nova$name_name')]",
			"apiVersion": "2016-08-01",
			"location": "[parameters('default_resource_location')]",
			"identity": {
                "type": "SystemAssigned"
            },
			"scale": null,
			"properties": {               
				 "siteConfig": {
					"appSettings": [
						{
							"name": "APPINSIGHTS_INSTRUMENTATIONKEY",
							"value": "[reference(resourceId('microsoft.insights/components/', parameters('components_novaweb$name_name')), '2015-05-01').InstrumentationKey]"
						},
						{
							"name": "NODE_ENV",
							"value": "production"
						},
						{
							"name": "NOVA_KEYVAULT_NAME",
							"value": "NovaServicesKV$name"
						}
					]
				},

				"enabled": true,
				"hostNameSslStates": [
					{
						"name": "[concat(parameters('sites_nova$name_name'),'.azurewebsites.net')]",
						"sslState": "Disabled",
						"virtualIP": null,
						"thumbprint": null,
						"toUpdate": null,
						"hostType": "Standard"
					},
					{
						"name": "[concat(parameters('sites_nova$name_name'),'.scm.azurewebsites.net')]",
						"sslState": "Disabled",
						"virtualIP": null,
						"thumbprint": null,
						"toUpdate": null,
						"hostType": "Repository"
					}
				],
				"serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_nova_app_service_plan_name'))]",
				"reserved": false,
				"scmSiteAlsoStopped": false,
				"hostingEnvironmentProfile": null,
				"clientAffinityEnabled": true,
				"clientCertEnabled": false,
				"hostNamesDisabled": false,
				"containerSize": 0,
				"dailyMemoryTimeQuota": 0,
				"cloningInfo": null,
				"httpsOnly": true
			},
			"dependsOn": [
				"[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_nova_app_service_plan_name'))]"
			]
		},
		{
			"comments": "Generalized from resource: '/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.EventHub/namespaces/novametricseventhub/AuthorizationRules/RootManageSharedAccessKey'.",
			"type": "Microsoft.EventHub/namespaces/AuthorizationRules",
			"name": "[concat(parameters('namespaces_novametricseventhub$name_name'), '/', parameters('AuthorizationRules_RootManageSharedAccessKey_name'))]",
			"apiVersion": "2017-04-01",
			"location": "[parameters('default_resource_location')]",
			"scale": null,
			"properties": {
				"rights": [
					"Listen",
					"Manage",
					"Send"
				]
			},
			"dependsOn": [
				"[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_novametricseventhub$name_name'))]"
			]
		},
		{
			"comments": "Generalized from resource: '/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.EventHub/namespaces/novametricseventhub/eventhubs/novametricseventhub'.",
			"type": "Microsoft.EventHub/namespaces/eventhubs",
			"name": "[concat(parameters('namespaces_novametricseventhub$name_name'), '/', parameters('eventhubs_novametricseventhub_name'))]",
			"apiVersion": "2017-04-01",
			"location": "[parameters('default_resource_location')]",
			"scale": null,
			"properties": {
				"messageRetentionInDays": 1,
				"partitionCount": 2,
				"status": "Active"
			},
			"dependsOn": [
				"[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_novametricseventhub$name_name'))]"
			]
		},
		{
			"comments": "Generalized from resource: '/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.EventHub/namespaces/novametricseventhub/eventhubs/novametricseventhub/authorizationRules/manage'.",
			"type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
			"name": "[concat(parameters('namespaces_novametricseventhub$name_name'), '/', parameters('eventhubs_novametricseventhub_name'), '/', parameters('authorizationRules_manage_name'))]",
			"apiVersion": "2017-04-01",
			"location": "[parameters('default_resource_location')]",
			"scale": null,
			"properties": {
				"rights": [
					"Manage",
					"Listen",
					"Send"
				]
			},
			"dependsOn": [
				"[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_novametricseventhub$name_name'))]",
				"[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('namespaces_novametricseventhub$name_name'), parameters('eventhubs_novametricseventhub_name'))]"
			]
		},
		{
			"comments": "Generalized from resource: '/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.EventHub/namespaces/novametricseventhub/eventhubs/novametricseventhub/consumergroups/$Default'.",
			"type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
			"name": "[concat(parameters('namespaces_novametricseventhub$name_name'), '/', parameters('eventhubs_novametricseventhub_name'), '/', parameters('consumergroups_$Default_name'))]",
			"apiVersion": "2017-04-01",
			"location": "[parameters('default_resource_location')]",
			"scale": null,
			"properties": {},
			"dependsOn": [
				"[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_novametricseventhub$name_name'))]",
				"[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('namespaces_novametricseventhub$name_name'), parameters('eventhubs_novametricseventhub_name'))]"
			]
		},
		{
			"comments": "Generalized from resource: '/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.EventHub/namespaces/novametricseventhub/eventhubs/novametricseventhub/consumergroups/metrics-ingestor'.",
			"type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
			"name": "[concat(parameters('namespaces_novametricseventhub$name_name'), '/', parameters('eventhubs_novametricseventhub_name'), '/', parameters('consumergroups_metrics-ingestor_name'))]",
			"apiVersion": "2017-04-01",
			"location": "[parameters('default_resource_location')]",
			"scale": null,
			"properties": {},
			"dependsOn": [
				"[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_novametricseventhub$name_name'))]",
				"[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('namespaces_novametricseventhub$name_name'), parameters('eventhubs_novametricseventhub_name'))]"
			]
		},
		{
			"comments": "Generalized from resource: '/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.EventHub/namespaces/novametricseventhub/eventhubs/novametricseventhub'.",
			"type": "Microsoft.EventHub/namespaces/eventhubs",
			"name": "[concat(parameters('namespaces_novametricseventhub$name_name'), '/', parameters('eventhubs_novametricseventhubdefault_name'))]",
			"apiVersion": "2017-04-01",
			"location": "[parameters('default_resource_location')]",
			"scale": null,
			"properties": {
				"messageRetentionInDays": 1,
				"partitionCount": 2,
				"status": "Active"
			},
			"dependsOn": [
				"[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_novametricseventhub$name_name'))]"
			]
		},
		{
			"comments": "Generalized from resource: '/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.EventHub/namespaces/novametricseventhub/eventhubs/novametricseventhub/authorizationRules/manage'.",
			"type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
			"name": "[concat(parameters('namespaces_novametricseventhub$name_name'), '/', parameters('eventhubs_novametricseventhubdefault_name'), '/', parameters('authorizationRules_manage_name'))]",
			"apiVersion": "2017-04-01",
			"location": "[parameters('default_resource_location')]",
			"scale": null,
			"properties": {
				"rights": [
					"Manage",
					"Listen",
					"Send"
				]
			},
			"dependsOn": [
				"[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_novametricseventhub$name_name'))]",
				"[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('namespaces_novametricseventhub$name_name'), parameters('eventhubs_novametricseventhubdefault_name'))]"
			]
		},
		{
			"comments": "Generalized from resource: '/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.EventHub/namespaces/novametricseventhub/eventhubs/novametricseventhub/consumergroups/$Default'.",
			"type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
			"name": "[concat(parameters('namespaces_novametricseventhub$name_name'), '/', parameters('eventhubs_novametricseventhubdefault_name'), '/', parameters('consumergroups_$Default_name'))]",
			"apiVersion": "2017-04-01",
			"location": "[parameters('default_resource_location')]",
			"scale": null,
			"properties": {},
			"dependsOn": [
				"[resourceId('Microsoft.EventHub/namespaces', parameters('namespaces_novametricseventhub$name_name'))]",
				"[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('namespaces_novametricseventhub$name_name'), parameters('eventhubs_novametricseventhubdefault_name'))]"
			]
		},
		{
			"comments": "Generalized from resource: '/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.Web/sites/nova$name/config/web'.",
			"type": "Microsoft.Web/sites/config",
			"name": "[concat(parameters('sites_nova$name_name'), '/', parameters('config_web_name'))]",
			"apiVersion": "2016-08-01",
			"location": "[parameters('default_resource_location')]",
			"scale": null,
			"properties": {
				"numberOfWorkers": 1,
				"defaultDocuments": [
					"Default.htm",
					"Default.html",
					"Default.asp",
					"index.htm",
					"index.html",
					"iisstart.htm",
					"default.aspx",
					"index.php",
					"hostingstart.html"
				],
				"netFrameworkVersion": "v4.0",
				"phpVersion": "5.6",
				"pythonVersion": "",
				"nodeVersion": "",
				"linuxFxVersion": "",
				"windowsFxVersion": null,
				"requestTracingEnabled": false,
				"remoteDebuggingEnabled": false,
				"remoteDebuggingVersion": null,
				"httpLoggingEnabled": false,
				"logsDirectorySizeLimit": 35,
				"detailedErrorLoggingEnabled": false,
				"publishingUsername": "$nova$name",
				"publishingPassword": null,
				"appSettings": null,
				"azureStorageAccounts": {},
				"metadata": null,
				"connectionStrings": null,
				"machineKey": null,
				"handlerMappings": null,
				"documentRoot": null,
				"scmType": "None",
				"use32BitWorkerProcess": true,
				"webSocketsEnabled": false,
				"alwaysOn": false,
				"javaVersion": null,
				"javaContainer": null,
				"javaContainerVersion": null,
				"appCommandLine": "",
				"managedPipelineMode": "Integrated",
				"virtualApplications": [
					{
						"virtualPath": "/",
						"physicalPath": "site\\wwwroot",
						"preloadEnabled": false,
						"virtualDirectories": null
					}
				],
				"winAuthAdminState": 0,
				"winAuthTenantState": 0,
				"customAppPoolIdentityAdminState": false,
				"customAppPoolIdentityTenantState": false,
				"runtimeADUser": null,
				"runtimeADUserPassword": null,
				"loadBalancing": "LeastRequests",
				"routingRules": [],
				"experiments": {
					"rampUpRules": []
				},
				"limits": null,
				"autoHealEnabled": false,
				"autoHealRules": null,
				"tracingOptions": null,
				"vnetName": "",
				"siteAuthEnabled": false,
				"siteAuthSettings": {
					"enabled": null,
					"unauthenticatedClientAction": null,
					"tokenStoreEnabled": null,
					"allowedExternalRedirectUrls": null,
					"defaultProvider": null,
					"clientId": null,
					"clientSecret": null,
					"issuer": null,
					"allowedAudiences": null,
					"additionalLoginParams": null,
					"isAadAutoProvisioned": false,
					"googleClientId": null,
					"googleClientSecret": null,
					"googleOAuthScopes": null,
					"facebookAppId": null,
					"facebookAppSecret": null,
					"facebookOAuthScopes": null,
					"twitterConsumerKey": null,
					"twitterConsumerSecret": null,
					"microsoftAccountClientId": null,
					"microsoftAccountClientSecret": null,
					"microsoftAccountOAuthScopes": null
				},
				"cors": null,
				"push": null,
				"apiDefinition": null,
				"autoSwapSlotName": null,
				"localMySqlEnabled": false,
				"managedServiceIdentityId": 162,
				"xManagedServiceIdentityId": null,
				"ipSecurityRestrictions": null,
				"http20Enabled": false,
				"minTlsVersion": "1.2",
				"ftpsState": "AllAllowed",
				"reservedInstanceCount": 0
			},
			"dependsOn": [
				"[resourceId('Microsoft.Web/sites', parameters('sites_nova$name_name'))]"
			]
		},
		{
			"comments": "Generalized from resource: '/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.Web/sites/nova$name/hostNameBindings/nova$name.azurewebsites.net'.",
			"type": "Microsoft.Web/sites/hostNameBindings",
			"name": "[concat(parameters('sites_nova$name_name'), '/', parameters('hostNameBindings_nova$name.azurewebsites.net_name'))]",
			"apiVersion": "2016-08-01",
			"location": "[parameters('default_resource_location')]",
			"scale": null,
			"properties": {
				"siteName": "nova$name",
				"domainId": null,
				"hostNameType": "Verified"
			},
			"dependsOn": [
				"[resourceId('Microsoft.Web/sites', parameters('sites_nova$name_name'))]"
			]
		},
		{
			"apiVersion": "2015-03-01-preview",
			"name": "[parameters('sparkClusterName')]",
			"type": "Microsoft.HDInsight/clusters",
			"location": "[parameters('default_resource_location')]",
			"dependsOn": [
				"Microsoft.Storage/storageAccounts/nova$namespark"
			],
			"properties": {
				"clusterVersion": "[parameters('sparkClusterVersion')]",
				"osType": "Linux",
				"tier": "standard",
				"clusterDefinition": {
					"kind": "[parameters('sparkClusterKind')]",
					"componentVersion": {
						"Spark": "2.3"
					},
					"configurations": {
						"gateway": {
							"restAuthCredential.isEnabled": true,
							"restAuthCredential.username": "[parameters('sparkClusterLoginUserName')]",
							"restAuthCredential.password": "[parameters('sparkClusterLoginPassword')]"
						}
					}
				},
				"storageProfile": {
					"storageaccounts": [
						{
							"name": "nova$namespark.blob.core.windows.net",
							"isDefault": true,
							"container": "nova$name-default",
							"key": "[listKeys('Microsoft.Storage/storageAccounts/nova$namespark', '2015-05-01-preview').key1]"
						}
					]
				},
				"computeProfile": {
					"roles": [
						{
							"autoscale": null,
							"name": "headnode",
							"minInstanceCount": 1,
							"targetInstanceCount": 2,
							"hardwareProfile": {
								"vmSize": "Standard_D12_V2"
							},
							"osProfile": {
								"linuxOperatingSystemProfile": {
									"username": "[parameters('sparkSshUserName')]",
									"password": "[parameters('sparkSshPassword')]"
								}
							},
							"virtualNetworkProfile": null,
							"scriptActions": []
						},
						{
							"autoscale": null,
							"name": "workernode",
							"targetInstanceCount": 3,
							"hardwareProfile": {
								"vmSize": "Standard_D14_V2"
							},
							"osProfile": {
								"linuxOperatingSystemProfile": {
									"username": "[parameters('sparkSshUserName')]",
									"password": "[parameters('sparkSshPassword')]"
								}
							},
							"virtualNetworkProfile": null,
							"scriptActions": []
						}
					]
				}
			},
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "/subscriptions/$subscriptionId/resourcegroups/$resourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/SparkManagedIdentity$name": {}
                }
            }
		},
		{
			"type": "Microsoft.Storage/storageAccounts",
			"name": "nova$namespark",
			"apiVersion": "2015-05-01-preview",
			"location": "[parameters('default_resource_location')]",
			"properties": {
				"accountType": "Standard_LRS"
			},
			"resources": [
				{
					"name": "[concat('default/', 'scripts')]",
					"type": "blobServices/containers",
					"apiVersion": "2018-03-01-preview",
					"dependsOn": [
						"nova$namespark"
					]
				},
				{
					"name": "[concat('default/', 'deployment')]",
					"type": "blobServices/containers",
					"apiVersion": "2018-03-01-preview",
					"dependsOn": [
						"nova$namespark"
					]
				}
			]
		},
		{
            "apiVersion": "2015-08-31-preview",
            "name": "[parameters('sparkManagedIdentity')]",
			"location": "[parameters('default_resource_location')]",
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "properties": {}
        }
	]
}
